@model IPagedList<Lecture>

@{
    ViewData["Title"] = "Schedule for Student";
}

<div class="container">
    <div class="row justify-content-md-center">
        <div class="col-10">

            <form class="row ms-auto my-2 my-lg-0" asp-action="ScheduleForStudent" method="get">
                <div class="col-auto">
                    <input type="hidden" name="daysForward" value="@ViewData["DaysForward"]" /> <!-- Add this hidden field to make the search work correctly-->
                    <input type="text" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]"
                           placeholder="By Teacher/Subject/Date..." />
                </div>
                <div class="col-auto">
                    <button type="submit" value="Search" class="btn btn-outline-primary"><i class="bi bi-search"></i></button>
                </div>
                <div class="col-auto">
                    <a class="btn btn-outline-primary" asp-action="ScheduleForStudent" asp-route-daysForward="@ViewData["DaysForward"]">Back to List</a>
                </div>
            </form>

            <table class="table">
                <thead>
                    <tr class="text-center">
                        <th class="align-middle">
                            <a asp-action="ScheduleForStudent" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-daysForward="@ViewData["DaysForward"]">Lecture Date</a>
                        </th>
                        <th class="align-middle">
                            Start Time<br />EndTime
                        </th>
                        <th class="align-middle">
                            <a asp-action="ScheduleForStudent" asp-route-sortOrder="@ViewData["SubjectSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-daysForward="@ViewData["DaysForward"]">Subject</a>
                        </th>
                        <th class="align-middle">
                            <a asp-action="ScheduleForStudent" asp-route-sortOrder="@ViewData["LectureRoomSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-daysForward="@ViewData["DaysForward"]">Lecture Room</a>
                        </th>
                        <th class="align-middle">
                            <a asp-action="ScheduleForStudent" asp-route-sortOrder="@ViewData["FacultySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-daysForward="@ViewData["DaysForward"]">Faculty</a>
                        </th>
                        <th class="align-middle">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="text-center">
                            <td class="align-middle">
                                @Html.DisplayFor(modelItem => item.LectureDate)
                            </td>
                            <td class="align-middle">
                                @item.StartTime.ToString(@"hh\:mm")
                                <br />
                                @item.EndTime.ToString(@"hh\:mm")
                            </td>
                            <td class="align-middle">
                                @item.Subject.Name
                            </td>
                            <td class="align-middle">
                                @Html.DisplayFor(modelItem => item.LectureRoom.Name)
                            </td>
                            <td class="align-middle">
                                @Html.DisplayFor(modelItem => item.Faculty.Name)
                            </td>
                            <td class="align-middle">
                                <div class="btn-group">
                                    <a class="btn btn-outline-primary" asp-controller="Lectures" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i> Edit </a>
                                    <a class="btn btn-outline-primary" asp-controller="Lectures" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"></i> Details </a>
                                    <a class="btn btn-danger text-white" asp-controller="Lectures" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i> Delete </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination links with Bootstrap 5 styles -->
            @if (Model.Count > 0)
            {
                <div class="text-center my-3">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>

                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">

                        <!-- First Page Link -->
                        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ScheduleForStudent", new { page = 1, daysForward = ViewData["DaysForward"], sortOrder = ViewData["CurrentSort"], currentFilter = ViewData["CurrentFilter"] })" aria-label="First">
                                <span aria-hidden="true">&laquo;&laquo;</span>
                            </a>
                        </li>

                        <!-- Previous Page Link -->
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" href="@Url.Action("ScheduleForStudent", new { page = Model.PageNumber - 1, daysForward = ViewData["DaysForward"], sortOrder = ViewData["CurrentSort"], currentFilter = ViewData["CurrentFilter"] })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @for (int i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                <a class="page-link" href="@Url.Action("ScheduleForStudent", new { page = i, daysForward = ViewData["DaysForward"], sortOrder = ViewData["CurrentSort"], currentFilter = ViewData["CurrentFilter"] })">@i</a>
                            </li>
                        }

                        <!-- Next Page Link -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" href="@Url.Action("ScheduleForStudent", new { page = Model.PageNumber + 1, daysForward = ViewData["DaysForward"], sortOrder = ViewData["CurrentSort"], currentFilter = ViewData["CurrentFilter"] })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>

                        <!-- Last Page Link -->
                        <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ScheduleForStudent", new { page = Model.PageCount, daysForward = ViewData["DaysForward"], sortOrder = ViewData["CurrentSort"], currentFilter = ViewData["CurrentFilter"] })" aria-label="Last">
                                <span aria-hidden="true">&raquo;&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
            else
            {
                <p>0 items found</p>
            }

        </div>
    </div>
</div>

<!-- Use the partial view for 'Add New' button -->
@await Html.PartialAsync("_CreateItem", "Lectures")